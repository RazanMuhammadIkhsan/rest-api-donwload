const axios = require("axios");
const { Success, ErrorResponse } = require("../../esm/lib/function.js");

const JulApis = {
  ytmp3: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/downloader/yta?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  ytmp4: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/downloader/ytv?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  tiktok: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/downloader/tiktok?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  soundcloud: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/downloader/soundcloud?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  instagramProfile: async (username) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/stalker/igstalk?user=${username}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  facebook: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/downloader/facebook?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  capcut: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/downloader/capcut?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  pinterest: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/downloader/pindl?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  FilmFinder: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/filmfinder?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  youtubeSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/ytsearch?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  AnimeSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/animeindo?q=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  bkpindoSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/bkpindoh?q=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  DouyinSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/douyinsearch?q=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  pinterestSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/pinsearch?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  komikSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/komikindosearch?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  repoSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/ghs?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  spotifySearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/spotifysearch?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  soundcloudSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/soundcsearch?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  tiktokSearch: async (query) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/search/tiktoks?query=${query}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  komikindoDetail: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/info/komikdetail?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  animeDetail: async (url) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/info/animeindodetail?url=${url}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  komikindoPopular: async () => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/info/komikpopular`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },

  aiPuisi: async (text) => {
    try {
      const { data } = await axios.get(
        `https://api.juul-web-id.xyz/ai/puisi?text=${text}`,
      );
      return new Success(data);
    } catch (err) {
      return new ErrorResponse(err);
    }
  },
};

module.exports = { JulApis };
